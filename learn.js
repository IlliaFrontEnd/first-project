"use strict";
// В JS есть функции, а есть процедуры - это одно и тоже, одна особенность, что у функции есть слово "return"(значение) и это значение мы можем присваивать переменной, а у процедуры нет. 
// function sum (a,b) {
//   return a+b; // функция, потому что есть "return"
// }
// function sum1(a,b) {
//   console.log(a+b); // процедура
// }
// 4 варианта записи функций:
// // 1. Function Declaration - анонимная функция, НО ОГРОМНАЯ особенность от других, что данную функцию можно вызвать раньше её написания! Так как она записывается в память! ОСТОЛЬНЫЕ ТРИ ВАРИАНТА - функция вызывается после её написания!
// sum(2,3) - вызванна раньше её написания!) 
// function sum (a,b) {
//   return a+b; 
// }  
// // 2. Function Expression - именная функция
// const sum = function (a,b) {
//   return a+b;
// } 
// // 3. IIFE (Immediately-invoked function expression)
// (function sum (a,b) {
//   return a+b;
// }) (5, 34) // нельзя переиспользовать функцию, так как определены уже её значения! Обычно встроенная функция 
// // 4. Arrow function - стрелочная функция
// const sum = (a,b) => a+b; 
//_____________________________________________
// // SCOPE - область видимости памяти: (глобальная, локальная)
// const a = 3; // Глобальная область видимости
// {
//   const a = 7; // let, const - заключенные в фигурные скобки - ЛОКАЛЬНАЯ область видимости
//   var b = 7; // Даже в фигурных скобках глобальная область видимости
// }
// console.log(a, b); // 3,7

//_____________________________________________ коллбэк функция для упрощения нескольких повторяющихся инструкций!
// const arr = [1,2,3];
// function fun (a, callBackFunction) {
//   const arrNew = [];
//   for (let i=0; i<a.length; i++) {
//     arrNew.push(callBackFunction(a[i])); // коллбэк функция в функции!
//   }
//   return arrNew;
// }
// function instruction (chislo) {
//   return chislo ** chislo; // переданное значение везвести в степень
// }
// fun(arr, instruction); // [1, 4, 27]

//_____________________________________________ коллбэк функция для упрощения нескольких повторяющихся инструкций!

//              _________ЗАМЕТКИ  с нового курса:  Полный курс по JavaScript + React - с нуля до результата.  Иван Петриченко
// Массив - это частный случай объекта!

// // switch(case) - ТОЛЬКО НА ЧЁТКОЕ СРАВНЕНИЕ!!!
// let a = 2 + 2;
// switch (a) {
//   case 3:
//     alert( 'Маловато' );
//     break;
//   case 4:
//     alert( 'В точку!' );
//     break;
//   case 5:
//     alert( 'Перебор' );
//     break;
//   default:
//     alert( "Нет таких значений" );
// } 
//  ________________

// Цикл for
for (let i = 1; i < 7; i++) {
    if (i === 3) {
        continue; // опускает условие в цикле
    }
    if (i === 5) {
        break; // прекращает цикл
    }
    console.log(i); // 1, 2, 4.
}